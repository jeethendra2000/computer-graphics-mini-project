//key1:project topic
//key2:nature
//key3:crow fly & come near cheese
//key4:crow sit on tree
//key5:fox come near tree
//key6:crow leave cheese & start singing
//key7:fox take cheese & go from there
//key8:crow fly & moral of story


#include<bits/stdc++.h>
#include<GL/glut.h>
using namespace std;

void print_text(char *str, GLint x, GLint y)
{
	GLint i;
	glRasterPos2d (x,y) ;
	for (i=0;str[i]!='\0';i++)
		glutBitmapCharacter (GLUT_BITMAP_TIMES_ROMAN_24, str[i]) ;		
}
void print_text1(char *str, GLint x, GLint y)
{
	GLint i;
	glRasterPos2d (x,y) ;
	for (i=0;str[i]!='\0';i++)
		glutBitmapCharacter (GLUT_BITMAP_HELVETICA_12, str[i]) ;		
}
void text()
{
	glBegin(GL_POLYGON);
	glColor3f(1.0,0.9,0.9);
	glVertex2i(80,50);
	glVertex2i(120,50);
	glVertex2i(120,62);
	glVertex2i(80,62);
	glEnd();
	glBegin(GL_TRIANGLES);
	glVertex2i(84,50);
	glVertex2i(84,47);
	glVertex2i(87,50);
	glEnd();
	glColor3f(1.0,0.0,0.0);
	print_text1("You are a very good singer.",81,58);
	print_text1("Sing a song for me!",81,54);
	glFlush();
}
void init(void)
{
	glClearColor(1.0,1.0,1.0,1.0);
	glMatrixMode(GL_PROJECTION);
	gluOrtho2D(0.0,300.0,0.0,200.0);
}
void sky()
{
	glBegin(GL_POLYGON);
	glColor3f(0.7,0.9,1.0);
	glVertex2f(0,150);
	glColor3f(0.7,0.9,1.0);
	glVertex2f(300,150);
	glColor3f(1.0,0.9,0.0);
	glVertex2f(300,200);
	glColor3f(0.7,0.9,1.0);
	glVertex2f(0,200);
	glEnd();
}
void water()
{
	glBegin(GL_POLYGON);
	glColor3f(0.3,0.9,1.0);
	glVertex2f(0,70);
	glVertex2f(300,70);
	glVertex2f(300,150);
	glVertex2f(0,150);
	glEnd();
	glBegin(GL_LINES);//outline
	glColor3f(0.1,0.0,0.0);
	glVertex2f(0,70);
	glVertex2f(300,70);
	glEnd();
}
void grass()
{
	glBegin(GL_POLYGON);
	glColor3f(0.4,1.0,0.4);
	glVertex2f(0,0);
	glVertex2f(300,0);
	glVertex2f(300,70);
	glVertex2f(0,70);
	glEnd();
}	
void grass1()
{
	glBegin(GL_POLYGON);
	glColor3f(0.4,1.0,0.4);
	glVertex2f(152,150);
	glVertex2f(300,150);
	glVertex2f(300,100);
	glEnd();
	glBegin(GL_LINES);//outline
	glColor3f(0.1,0.0,0.0);
	glVertex2f(152,150);
	glVertex2f(300,150);
	glEnd();
	glBegin(GL_LINES);
	glColor3f(0.1,0.0,0.0);
	glVertex2f(300,150);
	glVertex2f(300,100);
	glEnd();
	glBegin(GL_LINES);
	glColor3f(0.1,0.0,0.0);
	glVertex2f(152,150);
	glVertex2f(300,100);
	glEnd();
}
void mountain()
{
	glBegin(GL_TRIANGLES);
	glColor3ub(200,140,110);
	glVertex2i(0,150);
	glVertex2i(150,150);
	glVertex2i(70,195);
	glEnd();
	glBegin(GL_TRIANGLES);
	glVertex2i(80,150);
	glVertex2i(230,150);
	glVertex2i(150,185);
	glEnd();
	glBegin(GL_TRIANGLES);
	glVertex2i(150,150);
	glVertex2i(300,150);
	glVertex2i(230,195);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3ub(200,140,110);
	glVertex2i(0,150);
	glVertex2i(0,168.8);
	glVertex2i(25,185);
	glVertex2i(45,177);
	glEnd();
//OUTLINE
	glBegin(GL_LINES);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(0,150);
	glVertex2i(150,150);
	glEnd();
	glBegin(GL_LINES);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(0,150);
	glVertex2i(70,195);
	glEnd();
	glBegin(GL_LINES);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(70,195);
	glVertex2i(150,150);
	glEnd();
	glBegin(GL_LINES);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(150,185);
	glVertex2i(230,150);
	glEnd();
	glBegin(GL_LINES);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(150,150);
	glVertex2i(230,150);
	glEnd();
	glBegin(GL_LINES);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(150,185);
	glVertex2f(116.9,168.8);
	glEnd();
	glBegin(GL_LINES);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(230,195);
	glVertex2i(300,150);
	glEnd();
	glBegin(GL_LINES);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(300,150);
	glVertex2i(230,150);
	glEnd();
	glBegin(GL_LINES);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(230,195);
	glVertex2f(184.9,168.8);
	glEnd();
	glBegin(GL_LINES);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(25,185);
	glVertex2f(0,168.5);
	glEnd();
	glBegin(GL_LINES);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(25,185);
	glVertex2f(45,177);
	glEnd();
}
void gate()
{
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2f(0,70);
	glVertex2i(3,70);
	glVertex2i(3,85);
	glVertex2f(0,85);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(10,70);
	glVertex2i(13,70);
	glVertex2i(13,85);
	glVertex2i(10,85);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(20,70);
	glVertex2i(23,70);
	glVertex2i(23,85);
	glVertex2i(20,85);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(30,70);
	glVertex2i(33,70);
	glVertex2i(33,85);
	glVertex2i(30,85);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(40,70);
	glVertex2i(43,70);
	glVertex2i(43,85);
	glVertex2i(40,85);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(50,70);
	glVertex2i(53,70);
	glVertex2i(53,85);
	glVertex2i(50,85);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(60,70);
	glVertex2i(63,70);
	glVertex2i(63,85);
	glVertex2i(60,85);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(70,70);
	glVertex2i(73,70);
	glVertex2i(73,85);
	glVertex2i(70,85);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(80,70);
	glVertex2i(83,70);
	glVertex2i(83,85);
	glVertex2i(80,85);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(90,70);
	glVertex2i(93,70);
	glVertex2i(93,85);
	glVertex2i(90,85);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(100,70);
	glVertex2i(103,70);
	glVertex2i(103,85);
	glVertex2i(100,85);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(110,70);
	glVertex2i(113,70);
	glVertex2i(113,85);
	glVertex2i(110,85);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(120,70);
	glVertex2i(123,70);
	glVertex2i(123,85);
	glVertex2i(120,85);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(130,70);
	glVertex2i(133,70);
	glVertex2i(133,85);
	glVertex2i(130,85);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(140,70);
	glVertex2i(143,70);
	glVertex2i(143,85);
	glVertex2i(140,85);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(150,70);
	glVertex2i(153,70);
	glVertex2i(153,85);
	glVertex2i(150,85);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(160,70);
	glVertex2i(163,70);
	glVertex2i(163,85);
	glVertex2i(160,85);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(170,70);
	glVertex2i(173,70);
	glVertex2i(173,85);
	glVertex2i(170,85);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(180,70);
	glVertex2i(183,70);
	glVertex2i(183,85);
	glVertex2i(180,85);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(190,70);
	glVertex2i(193,70);
	glVertex2i(193,85);
	glVertex2i(190,85);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(200,70);
	glVertex2i(203,70);
	glVertex2i(203,85);
	glVertex2i(200,85);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(210,70);
	glVertex2i(213,70);
	glVertex2i(213,85);
	glVertex2i(210,85);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(220,70);
	glVertex2i(223,70);
	glVertex2i(223,85);
	glVertex2i(220,85);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(230,70);
	glVertex2i(233,70);
	glVertex2i(233,85);
	glVertex2i(230,85);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(240,70);
	glVertex2i(243,70);
	glVertex2i(243,85);
	glVertex2i(240,85);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(250,70);
	glVertex2i(253,70);
	glVertex2i(253,85);
	glVertex2i(250,85);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(260,70);
	glVertex2i(263,70);
	glVertex2i(263,85);
	glVertex2i(260,85);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(270,70);
	glVertex2i(273,70);
	glVertex2i(273,85);
	glVertex2i(270,85);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(280,70);
	glVertex2i(283,70);
	glVertex2i(283,85);
	glVertex2i(280,85);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(290,70);
	glVertex2i(293,70);
	glVertex2i(293,85);
	glVertex2i(290,85);
	glEnd();
}
void gate1()
{
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(0,80);
	glVertex2i(300,80);
	glVertex2f(300,81.5);
	glVertex2i(0,81.5);
	glEnd();
}
void gate2()
{
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(0,75);
	glVertex2i(300,75);
	glVertex2f(300,76.5);
	glVertex2i(0,76.5);
	glEnd();
}
void tree()
{
	glBegin(GL_POLYGON);
	glColor3ub(200,140,110);
	glVertex2i(15,15);
	glVertex2i(25,15);
	glVertex2i(25,100);
	glVertex2i(15,100);
	glEnd();
	glBegin(GL_POLYGON);
	glVertex2i(15,100);
	glVertex2i(25,100);
	glVertex2i(31,120);
	glVertex2i(20,105);
	glVertex2i(9,120);
	glEnd();
	glBegin(GL_TRIANGLES);
	glVertex2i(25,75);
	glVertex2i(25,70);
	glVertex2i(45,87);
	glEnd();
	glBegin(GL_LINES);//outline
	glColor3f(0.1,0.0,0.0);
	glVertex2i(15,15);
	glVertex2i(25,15);
	glEnd();
	glBegin(GL_LINES);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(15,15);
	glVertex2i(15,100);
	glEnd();
	glBegin(GL_LINES);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(25,15);
	glVertex2i(25,100);
	glEnd();
	glBegin(GL_LINES);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(15,100);
	glVertex2i(9,120);
	glEnd();
	glBegin(GL_LINES);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(9,120);
	glVertex2i(20,105);
	glEnd();
	glBegin(GL_LINES);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(20,105);
	glVertex2i(31,120);
	glEnd();
	glBegin(GL_LINES);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(31,120);
	glVertex2i(25,100);
	glEnd();
	glBegin(GL_LINES);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(25,75);
	glVertex2i(45,87);
	glEnd();
	glBegin(GL_LINES);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(45,87);
	glVertex2i(25,70);
	glEnd();
//leaves
	glBegin(GL_TRIANGLES);
	glColor3f(0.0,0.9,0.5);
	glVertex2i(5,95);
	glVertex2f(14.9,90);
	glVertex2i(14.9,100);
	glEnd();
	glBegin(GL_TRIANGLES);
	glColor3f(0.0,0.9,0.5);
	glVertex2i(5,95);
	glVertex2i(3,100);
	glVertex2i(15,100);
	glEnd();
	glBegin(GL_TRIANGLES);
	glColor3f(0.0,0.9,0.5);
	glVertex2i(3,120);
	glVertex2i(3,100);
	glVertex2i(15,100);
	glEnd();
	glBegin(GL_TRIANGLES);
	glColor3f(0.0,0.9,0.5);
	glVertex2i(3,120);
	glVertex2i(3,135);
	glVertex2i(15,100);
	glEnd();
	glBegin(GL_TRIANGLES);
	glColor3f(0.0,0.9,0.5);
	glVertex2i(3,133);
	glVertex2i(3,135);
	glVertex2i(15,100);
	glEnd();
	glBegin(GL_TRIANGLES);
	glColor3f(0.0,0.9,0.5);
	glVertex2i(3,135);
	glVertex2i(9,120);
	glVertex2i(15,140);
	glEnd();
	glBegin(GL_TRIANGLES);
	glColor3f(0.0,0.9,0.5);
	glVertex2i(3,135);
	glVertex2i(9,120);
	glVertex2i(3,133);
	glEnd();
	glBegin(GL_TRIANGLES);
	glColor3f(0.0,0.9,0.5);
	glVertex2i(20,105);
	glVertex2i(9,120);
	glVertex2i(15,140);
	glEnd();
	glBegin(GL_TRIANGLES);
	glColor3f(0.0,0.9,0.5);
	glVertex2i(20,105);
	glVertex2i(31,120);
	glVertex2i(15,140);
	glEnd();
	glBegin(GL_TRIANGLES);
	glColor3f(0.0,0.9,0.5);
	glVertex2i(15,140);
	glVertex2i(31,120);
	glVertex2i(31,140);
	glEnd();
	glBegin(GL_TRIANGLES);
	glColor3f(0.0,0.9,0.5);	
	glVertex2i(45,120);
	glVertex2i(31,120);
	glVertex2i(31,140);
	glEnd();
	glBegin(GL_TRIANGLES);
	glColor3f(0.0,0.9,0.5);
	glVertex2i(45,120);
	glVertex2i(40,140);
	glVertex2i(31,140);
	glEnd();
	glBegin(GL_TRIANGLES);
	glColor3f(0.0,0.9,0.5);
	glVertex2i(45,120);
	glVertex2i(40,140);
	glVertex2i(50,120);
	glEnd();
	glBegin(GL_TRIANGLES);
	glColor3f(0.0,0.9,0.5);
	glVertex2i(31,120);
	glVertex2i(25,100);
	glVertex2i(50,120);
	glEnd();
	glBegin(GL_TRIANGLES);
	glColor3f(0.0,0.9,0.5);
	glVertex2i(47,97);
	glVertex2i(25,100);
	glVertex2i(50,120);
	glEnd();
	glBegin(GL_TRIANGLES);
	glColor3f(0.0,0.9,0.5);
	glVertex2i(47,97);
	glVertex2i(25,100);
	glVertex2i(25,90);
	glEnd();
	glBegin(GL_TRIANGLES);
	glColor3f(0.0,0.9,0.5);
	glVertex2i(4,134);
	glVertex2i(9,120);
	glVertex2i(15,100);
	glEnd();
	glBegin(GL_TRIANGLES);
	glColor3f(0.0,0.9,0.5);
	glVertex2i(3,120);
	glVertex2i(0,134);
	glVertex2i(3,100);
	glEnd();
	glBegin(GL_TRIANGLES);
	glColor3f(0.0,0.9,0.5);
	glVertex2i(3,120);
	glVertex2i(0,134);
	glVertex2i(15,140);
	glEnd();
//plant1
	glBegin(GL_TRIANGLES);
	glColor3f(0.0,0.9,0.5);
	glVertex2i(28,15);
	glVertex2i(33,15);
	glVertex2i(34,24);
	glEnd();
	glBegin(GL_TRIANGLES);
	glColor3f(0.0,0.9,0.5);
	glVertex2i(28,15);
	glVertex2i(31,17);
	glVertex2i(20,25);
	glEnd();
	glBegin(GL_TRIANGLES);
	glColor3f(0.0,0.9,0.5);
	glVertex2i(29,15);
	glVertex2i(31,18);
	glVertex2i(28,26);
	glEnd();
//plant2
	glBegin(GL_TRIANGLES);
	glColor3f(0.0,0.9,0.5);
	glVertex2i(14,15);
	glVertex2i(9,15);
	glVertex2i(16,24);
	glEnd();
	glBegin(GL_TRIANGLES);
	glColor3f(0.0,0.9,0.5);
	glVertex2i(9,15);
	glVertex2i(12,17);
	glVertex2i(1,25);
	glEnd();
	glBegin(GL_TRIANGLES);
	glColor3f(0.0,0.9,0.5);
	glVertex2i(10,17);
	glVertex2i(13,19);
	glVertex2i(9,26);
	glEnd();
}
void tree1()
{
	glBegin(GL_POLYGON);
	glColor3ub(200,140,110);
	glVertex2i(234,125);
	glVertex2i(238,125);
	glVertex2i(238,135);
	glVertex2i(234,135);
	glEnd();
	glBegin(GL_TRIANGLES);
	glColor3f(0.0,0.9,0.5);
	glVertex2i(230,135);
	glVertex2i(236,145);
	glVertex2i(242,135);
	glEnd();
	glBegin(GL_LINES);//outline
	glColor3f(0.1,0.0,0.0);
	glVertex2i(234,135);
	glVertex2i(234,125);
	glEnd();
	glBegin(GL_LINES);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(234,125);
	glVertex2i(238,125);
	glEnd();
	glBegin(GL_LINES);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(238,135);
	glVertex2i(238,125);
	glEnd();
	glBegin(GL_LINES);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(230,135);
	glVertex2i(236,145);
	glEnd();
	glBegin(GL_LINES);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(230,135);
	glVertex2i(242,135);
	glEnd();
	glBegin(GL_LINES);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(236,145);
	glVertex2i(242,135);
	glEnd();	
}
void tree2()
{
	glBegin(GL_POLYGON);
	glColor3ub(200,140,110);
	glVertex2i(260,115);
	glVertex2i(264,115);
	glVertex2i(264,125);
	glVertex2i(260,125);
	glEnd();
	glBegin(GL_TRIANGLES);
	glColor3f(0.0,0.9,0.5);
	glVertex2i(256,125);
	glVertex2i(262,135);
	glVertex2i(268,125);
	glEnd();
	glBegin(GL_LINES);//outline
	glColor3f(0.1,0.0,0.0);
	glVertex2i(260,115);
	glVertex2i(264,115);
	glEnd();
	glBegin(GL_LINES);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(260,115);
	glVertex2i(260,125);
	glEnd();
	glBegin(GL_LINES);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(264,115);
	glVertex2i(264,125);
	glEnd();
	glBegin(GL_LINES);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(256,125);
	glVertex2i(262,135);
	glEnd();
	glBegin(GL_LINES);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(262,135);
	glVertex2i(268,125);
	glEnd();
	glBegin(GL_LINES);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(256,125);
	glVertex2i(268,125);
	glEnd();
}
void cheese1()
{
	glBegin(GL_TRIANGLES);
	glColor3f(1.0,0.9,0.0);
	glVertex2i(157,30);
	glVertex2i(153,33);
	glVertex2i(157,35);
	glEnd();
	glBegin(GL_LINES);//outline
	glColor3f(0.1,0.0,0.0);
	glVertex2i(153,33);
	glVertex2i(157,35);
	glEnd();
	glBegin(GL_LINES);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(153,33);
	glVertex2i(157,30);
	glEnd();
	glBegin(GL_LINES);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(157,30);
	glVertex2i(157,35);
	glEnd();
}
void crow1()
{
	glBegin(GL_TRIANGLES);//cheese
	glColor3f(1.0,0.9,0.0);
	glVertex2i(157,30);
	glVertex2i(153,33);
	glVertex2i(157,35);
	glEnd();
	glBegin(GL_LINES);// cheese outline
	glColor3f(0.1,0.0,0.0);
	glVertex2i(153,33);
	glVertex2i(157,35);
	glEnd();
	glBegin(GL_LINES);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(153,33);
	glVertex2i(157,30);
	glEnd();
	glBegin(GL_LINES);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(157,30);
	glVertex2i(157,35);
	glEnd();
	glBegin(GL_TRIANGLES); //mouth
	glColor3f(0.1,0.0,0.0);
	glVertex2f(157,32.5);
	glVertex2i(160,34);
	glVertex2i(160,31);
	glEnd();
	glBegin(GL_POLYGON); //head
	glColor3f(0.7,0.8,1.0);
	glVertex2i(160,34);
	glVertex2i(162,35);
	glVertex2i(164,35);
	glVertex2i(166,34);
	glVertex2f(166,32.5);
	glVertex2i(166,31);
	glVertex2i(164,30);
	glVertex2i(164,30);
	glVertex2i(160,31);
	glEnd();
	glBegin(GL_POLYGON); //eye
	glColor3f(0.1,0.0,0.0);
	glVertex2i(162,32.5);
	glVertex2i(164,32.5);
	glVertex2i(164,33);
	glVertex2i(162,33);
	glEnd();
	glBegin(GL_POLYGON); //body
	glColor3f(0.1,0.0,0.0);
	glVertex2i(166,34);
	glVertex2i(176,38);
	glVertex2i(174,34);
	glVertex2i(186,38);
	glVertex2i(184,34);
	glVertex2i(192,34);
	glVertex2i(188,32);
	glVertex2i(200,27);
	glVertex2i(188,29);
	glVertex2i(192,27);
	glVertex2i(184,31);
	glVertex2i(186,27);
	glVertex2i(174,31);
	glVertex2i(176,27);
	glVertex2i(166,31);
	glEnd();
	glBegin(GL_POLYGON); //leg1
	glColor3f(0.1,0.0,0.0);
	glVertex2i(169,30);
	glVertex2i(169,27);
	glVertex2i(168,25);
	glVertex2i(171,25);
	glVertex2i(170,27);
	glVertex2i(170,30);
	glEnd();
	glBegin(GL_POLYGON); //leg2
	glColor3f(0.1,0.0,0.0);
	glVertex2f(170.5,26);
	glVertex2f(172.5,26);
	glVertex2i(172,29);
	glVertex2i(171,29);
	glVertex2i(171,29);
	glEnd();
	glFlush();
}
void nature(void)
{
	glClear(GL_COLOR_BUFFER_BIT);
	sky();
	water();
	grass();
	grass1();
	mountain();
	gate();
	gate1();
	gate2();
	tree();
	tree1();
	tree2();
	cheese1();
	glFlush();
}

void crow()
{
	glBegin(GL_TRIANGLES); //mouth
	glColor3f(0.1,0.0,0.0);
	glVertex2f(257,92.5);
	glVertex2i(260,94);
	glVertex2i(260,91);
	glEnd();
	glBegin(GL_POLYGON); //head
	glColor3f(0.7,0.8,1.0);
	glVertex2i(260,94);
	glVertex2i(262,95);
	glVertex2i(264,95);
	glVertex2i(266,94);
	glVertex2f(266,92.5);
	glVertex2i(266,91);
	glVertex2i(264,90);
	glVertex2i(264,90);
	glVertex2i(260,91);
	glEnd();
	glBegin(GL_POLYGON); //eye
	glColor3f(0.1,0.0,0.0);
	glVertex2i(262,92.5);
	glVertex2i(264,92.5);
	glVertex2i(264,93);
	glVertex2i(262,93);
	glEnd();
	glBegin(GL_POLYGON); //body
	glColor3f(0.1,0.0,0.0);
	glVertex2i(266,94);
	glVertex2i(276,98);
	glVertex2i(274,94);
	glVertex2i(286,98);
	glVertex2i(284,94);
	glVertex2i(292,94);
	glVertex2i(288,92);
	glVertex2i(300,87);
	glVertex2i(288,89);
	glVertex2i(292,87);
	glVertex2i(284,91);
	glVertex2i(286,87);
	glVertex2i(274,91);
	glVertex2i(276,87);
	glVertex2i(266,91);
	glEnd();
	glBegin(GL_POLYGON); //leg1
	glColor3f(0.1,0.0,0.0);
	glVertex2i(269,90);
	glVertex2i(269,87);
	glVertex2i(268,85);
	glVertex2i(271,85);
	glVertex2i(270,87);
	glVertex2i(270,90);
	glEnd();
	glBegin(GL_POLYGON); //leg2
	glColor3f(0.1,0.0,0.0);
	glVertex2f(270.5,86);
	glVertex2f(272.5,86);
	glVertex2i(272,89);
	glVertex2i(271,89);
	glVertex2i(271,89);
	glEnd();
	glFlush();
}
void crowfly()
{
	float x=0,y=0;
	for(int i=0;i<200;i++)
	{
		glClear(GL_COLOR_BUFFER_BIT);
	sky();
	grass();
	mountain();
	water();
	gate();
	gate1();
	gate2();
	tree();
	grass1();
	tree1();
	tree2();
	cheese1();
			glPushMatrix();
			glTranslatef(x,y,0.0);
			crow();
			x-=.500;
			y-=.30;
			glPopMatrix();
			glFlush();
	}
}

void cheese2()
{
	glBegin(GL_TRIANGLES);//cheese2
	glColor3f(1.0,0.9,0.0);
	glVertex2i(46,93);
	glVertex2i(46,89);
	glVertex2f(49,91.5);
	glEnd();
	glColor3f(0.0,0.0,0.0);
	glBegin(GL_LINES);//outline
	glVertex2i(46,93);
	glVertex2i(46,89);
	glEnd();
	glBegin(GL_LINES);
	glVertex2i(46,89);
	glVertex2f(49,91.5);
	glEnd();
	glBegin(GL_LINES);
	glVertex2i(46,93);
	glVertex2f(49,91.5);
	glEnd();
}
void crow2()
{
	
	sky();
	water();
	grass();
	grass1();
	mountain();
	gate();
	gate1();
	gate2();
	tree();
	tree1();
	tree2();
	cheese2();
	glBegin(GL_TRIANGLES);//mouth
	glColor3f(0.1,0.0,0.0);
	glVertex2i(48,91);
	glVertex2i(45,92);
	glVertex2i(45,90);
	glEnd();
	glBegin(GL_POLYGON);//head
	glColor3f(0.7,0.8,1.0);
	glVertex2i(45,92);
	glVertex2i(44,93);
	glVertex2i(43,93);
	glVertex2i(42,92);
	glVertex2i(42,90);
	glVertex2i(43,89);
	glVertex2i(44,89);
	glVertex2i(45,90);
	glEnd();
	glBegin(GL_POLYGON);//Eye
	glColor3f(0.1,0.0,0.0);
	glVertex2i(43,91);
	glVertex2i(44,91);
	glVertex2i(44,92);
	glVertex2i(43,92);
	glEnd();
	glBegin(GL_POLYGON); //body
	glColor3f(0.1,0.0,0.0);
	glVertex2i(42,92);
	glVertex2i(38,94);
	glVertex2i(39,92);
	glVertex2i(35,92);
	glVertex2i(37,91);
	glVertex2i(27,80);
	glVertex2i(37,89);
	glVertex2i(35,85);
	glVertex2i(39,89);
	glVertex2i(39,86);
	glVertex2i(42,90);
	glEnd();
	glBegin(GL_POLYGON);//leg1
	glColor3f(0.1,0.0,0.0);
	glVertex2i(37,85);
	glVertex2i(38,85);
	glVertex2f(38,88);
	glVertex2i(37,87);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(36,83);
	glVertex2f(39,83);
	glVertex2i(38,85);
	glVertex2i(37,85);
	glEnd();
	glBegin(GL_POLYGON);//leg2
	glColor3f(0.1,0.0,0.0);
	glVertex2i(33,83);
	glVertex2f(34,83);
	glVertex2i(34,86);
	glVertex2i(33,86);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(32,81);
	glVertex2f(35,81);
	glVertex2i(34,83);
	glVertex2i(33,83);
	glEnd();
	glFlush();
}
void crow22()
{
	sky();
	water();
	grass();
	grass1();
	mountain();
	gate();
	gate1();
	gate2();
	tree();
	tree1();
	tree2();
	cheese2();
	glBegin(GL_TRIANGLES);//mouth
	glColor3f(0.1,0.0,0.0);
	glVertex2i(48,91);
	glVertex2i(45,92);
	glVertex2i(45,90);
	glEnd();
	glBegin(GL_POLYGON);//head
	glColor3f(0.7,0.8,1.0);
	glVertex2i(45,92);
	glVertex2i(44,93);
	glVertex2i(43,93);
	glVertex2i(42,92);
	glVertex2i(42,90);
	glVertex2i(43,89);
	glVertex2i(44,89);
	glVertex2i(45,90);
	glEnd();
	glBegin(GL_POLYGON);//Eye
	glColor3f(0.1,0.0,0.0);
	glVertex2i(43,91);
	glVertex2i(44,91);
	glVertex2i(44,92);
	glVertex2i(43,92);
	glEnd();
	glBegin(GL_POLYGON); //body
	glColor3f(0.1,0.0,0.0);
	glVertex2i(42,92);
	glVertex2i(38,94);
	glVertex2i(39,92);
	glVertex2i(35,92);
	glVertex2i(37,91);
	glVertex2i(27,80);
	glVertex2i(37,89);
	glVertex2i(35,85);
	glVertex2i(39,89);
	glVertex2i(39,86);
	glVertex2i(42,90);
	glEnd();
	glBegin(GL_POLYGON);//leg1
	glColor3f(0.1,0.0,0.0);
	glVertex2i(37,85);
	glVertex2i(38,85);
	glVertex2f(38,88);
	glVertex2i(37,87);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(36,83);
	glVertex2f(39,83);
	glVertex2i(38,85);
	glVertex2i(37,85);
	glEnd();
	glBegin(GL_POLYGON);//leg2
	glColor3f(0.1,0.0,0.0);
	glVertex2i(33,83);
	glVertex2f(34,83);
	glVertex2i(34,86);
	glVertex2i(33,86);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(32,81);
	glVertex2f(35,81);
	glVertex2i(34,83);
	glVertex2i(33,83);
	glEnd();
}
void crowfly1()
{
	float x=0,y=0;
	for(int i=0;i<300;i++)
	{
		glClear(GL_COLOR_BUFFER_BIT);
	sky();
	grass();
	mountain();
	water();
	gate();
	gate1();
	gate2();
	tree();
	grass1();
	tree1();
	tree2();
			glPushMatrix();
			glTranslatef(x,y,0.0);
			crow1();
			x-=0.45;
			y+=0.15;
			glPopMatrix();
			
		glFlush();
	}
	crow2();
}
void fox()
{
	glBegin(GL_POLYGON);
	glColor3f(0.7,0.9,1.0);
	glVertex2i(252,40);
	glVertex2i(254,38);
	glVertex2i(260,37);
	glVertex2i(264,39);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.7,0.9,1.0);
	glVertex2i(266,38);
	glVertex2i(260,32);
	glVertex2i(262,29);
	glVertex2i(261,26);
	glVertex2i(267,18);
	glVertex2i(274,14);		
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.7,0.9,1.0);
	glVertex2i(271,10);
	glVertex2i(274,14);	
	glVertex2i(267,18);
	glVertex2i(264,15);
	glEnd();
	glBegin(GL_TRIANGLES);
	glColor3f(0.7,0.9,1.0);
	glVertex2i(260,46);
	glVertex2i(262,52);	
	glVertex2f(262.5,44);
	glEnd();
	glBegin(GL_TRIANGLES);
	glColor3f(0.7,0.9,1.0);
	glVertex2i(267,42);
	glVertex2i(275,47);	
	glVertex2i(270,38);	
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.9,0.4,0.0);
	glVertex2f(283,12.5);
	glVertex2i(285,29);
	glVertex2i(290,35.5);
	glVertex2i(296,37);
	glVertex2i(290,20);
	glVertex2i(295,22);
	glVertex2i(290,18);
	glVertex2i(295,20);
	glVertex2i(290,16);
	glVertex2i(295,18);
	glVertex2i(290,14);
	glVertex2f(288,12.5);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.9,0.4,0.0);
	glVertex2f(283,12.5);
	glVertex2f(288,12.5);
	glVertex2i(274,6);
	glVertex2i(271,10);	
	glVertex2i(274,14);	
	glVertex2i(281,12);
	glEnd();
	glBegin(GL_TRIANGLES);
	glColor3f(0.9,0.4,0.0);
	glVertex2i(274,14);
	glVertex2i(281,12);
	glVertex2i(280,15);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.9,0.4,0.0);
	glVertex2i(274,14);
	glVertex2i(280,15);	
	glVertex2i(281,16);
	glVertex2i(279,16);
	glVertex2i(280,17);
	glVertex2i(278,17);
	glVertex2i(279,18);
	glVertex2i(276,18);
	glVertex2i(278,19);
	glVertex2i(271,25);
	glVertex2i(271,29);
	glVertex2f(271,33);
	glVertex2i(270,38);
	glVertex2i(264,39);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.9,0.4,0.0);
	glVertex2i(271,25);
	glVertex2i(273,27);
	glVertex2i(271,29);
	glVertex2i(273,31);
	glVertex2f(271,33);
	glVertex2f(273,35);
	glVertex2i(270,38);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.9,0.4,0.0);
	glVertex2i(252,40);
	glVertex2i(257,43);
	glVertex2i(260,46);
	glVertex2f(262.5,44);
	glVertex2i(264,46);
	glVertex2f(264,43);
	glVertex2i(266,44);
	glVertex2f(267,42);
	glVertex2i(270,38);
	glVertex2i(264,39);
	glEnd();
//outline
	glBegin(GL_LINE_LOOP);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(252,40);
	glVertex2i(257,43);
	glVertex2i(260,46);
	glVertex2i(262,52);
	glVertex2f(262.5,44);
	glVertex2i(264,46);
	glVertex2i(264,43);
	glVertex2i(266,44);
	glVertex2i(267,42);
	glVertex2i(275,47);
	glVertex2i(270,38);
	glVertex2f(273,35);
	glVertex2f(271,33);
	glVertex2i(273,31);
	glVertex2i(271,29);
	glVertex2i(273,27);
	glVertex2i(271,25);
	glVertex2i(278,19);
	glVertex2i(276,18);
	glVertex2i(279,18);
	glVertex2i(278,17);
	glVertex2i(280,17);
	glVertex2i(279,16);
	glVertex2i(281,16);
	glVertex2i(280,15);
	glVertex2i(281,12);
	glVertex2f(283,12.5);
	glVertex2i(285,29);
	glVertex2i(290,35.5);
	glVertex2i(296,37);
	glVertex2i(290,20);
	glVertex2i(295,22);
	glVertex2i(290,18);
	glVertex2i(295,20);
	glVertex2i(290,16);
	glVertex2i(295,18);
	glVertex2i(290,14);
	glVertex2f(288,12.5);
	glVertex2i(274,6);
	glVertex2i(271,10);
	glVertex2i(264,15);
	glVertex2i(267,18);
	glVertex2i(261,26);
	glVertex2i(262,29);
	glVertex2i(260,32);
	glVertex2i(266,38);
	glVertex2i(264,39);
	glVertex2i(260,37);
	glVertex2i(254,38);
	glEnd();
	glBegin(GL_LINES);//eyebrow1
	glColor3f(0.1,0.0,0.0);
	glVertex2f(258.5,44.5);
	glVertex2f(261,43.5);
	glEnd();
	glBegin(GL_LINES);//eyebrow2
	glColor3f(0.1,0.0,0.0);
	glVertex2f(262,43);
	glVertex2f(265,41.5);
	glEnd();
	glColor3f(0.0,0.0,0.0);//eye1
	glPointSize(5);
	glBegin(GL_POINTS);
	glVertex2f(258.5,43);
	glEnd();
	glColor3f(0.0,0.0,0.0);//eye2
	glPointSize(5);
	glBegin(GL_POINTS);
	glVertex2f(262,41.5);
	glEnd();
	glColor3f(0.0,0.0,0.0);//NOSE
	glBegin(GL_TRIANGLES);
	glVertex2f(252,40);
	glVertex2f(254,38);
	glVertex2f(250.5,37.8);
	glEnd();
	glColor3f(0.9,0.4,0.0);//leg1
	glBegin(GL_POLYGON);
	glVertex2f(267,6);
	glVertex2i(265,6);
	glVertex2i(265,4.5);
	glVertex2i(265,3);
	glVertex2f(269,4);
	glVertex2f(269,11);
	glVertex2f(267,12.5);
	glEnd();
	glBegin(GL_POLYGON);
	glVertex2f(271,4);
	glVertex2f(273,4);
	glVertex2f(273,7);
	glVertex2f(271,10);
	glEnd();
	glFlush();
}
void foxmove()
{
	float x=0,y=0;
	for(int i=0;i<271;i++)
	{
		glClear(GL_COLOR_BUFFER_BIT);
	sky();
	grass();
	mountain();
	water();
	gate();
	gate1();
	gate2();
	tree();
	grass1();
	tree1();
	tree2();
	crow22();
			glPushMatrix();
			glTranslatef(x,y,0.0);
			fox();
			x-=.70;
			y=.10;
			glPopMatrix();
			glFlush();
	}
	text();
}

void crow3()
{
	glBegin(GL_TRIANGLES);//mouth
	glColor3f(0.1,0.0,0.0);
	glVertex2i(48,91);
	glVertex2i(45,92);
	glVertex2i(45,90);
	glEnd();
	glBegin(GL_POLYGON);//head
	glColor3f(0.7,0.8,1.0);
	glVertex2i(45,92);
	glVertex2i(44,93);
	glVertex2i(43,93);
	glVertex2i(42,92);
	glVertex2i(42,90);
	glVertex2i(43,89);
	glVertex2i(44,89);
	glVertex2i(45,90);
	glEnd();
	glBegin(GL_POLYGON);//Eye
	glColor3f(0.1,0.0,0.0);
	glVertex2i(43,91);
	glVertex2i(44,91);
	glVertex2i(44,92);
	glVertex2i(43,92);
	glEnd();
	glBegin(GL_POLYGON); //body
	glColor3f(0.1,0.0,0.0);
	glVertex2i(42,92);
	glVertex2i(38,94);
	glVertex2i(39,92);
	glVertex2i(35,92);
	glVertex2i(37,91);
	glVertex2i(27,80);
	glVertex2i(37,89);
	glVertex2i(35,85);
	glVertex2i(39,89);
	glVertex2i(39,86);
	glVertex2i(42,90);
	glEnd();
	glBegin(GL_POLYGON);//leg1
	glColor3f(0.1,0.0,0.0);
	glVertex2i(37,85);
	glVertex2i(38,85);
	glVertex2f(38,88);
	glVertex2i(37,87);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(36,83);
	glVertex2f(39,83);
	glVertex2i(38,85);
	glVertex2i(37,85);
	glEnd();
	glBegin(GL_POLYGON);//leg2
	glColor3f(0.1,0.0,0.0);
	glVertex2i(33,83);
	glVertex2f(34,83);
	glVertex2i(34,86);
	glVertex2i(33,86);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(32,81);
	glVertex2f(35,81);
	glVertex2i(34,83);
	glVertex2i(33,83);
	glEnd();
}
void fox1()
{
	glBegin(GL_POLYGON);
	glColor3f(0.7,0.9,1.0);
	glVertex2i(62,40);
	glVertex2i(64,38);
	glVertex2i(70,37);
	glVertex2i(74,39);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.7,0.9,1.0);
	glVertex2i(76,38);
	glVertex2i(70,32);
	glVertex2i(72,29);
	glVertex2i(71,26);
	glVertex2i(77,18);
	glVertex2i(84,14);		
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.7,0.9,1.0);
	glVertex2i(81,10);
	glVertex2i(84,14);	
	glVertex2i(77,18);
	glVertex2i(74,15);
	glEnd();
	glBegin(GL_TRIANGLES);
	glColor3f(0.7,0.9,1.0);
	glVertex2i(70,46);
	glVertex2i(72,52);	
	glVertex2f(72.5,44);
	glEnd();
	glBegin(GL_TRIANGLES);
	glColor3f(0.7,0.9,1.0);
	glVertex2i(77,42);
	glVertex2i(85,47);	
	glVertex2i(80,38);	
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.9,0.4,0.0);
	glVertex2f(93,12.5);
	glVertex2i(95,29);
	glVertex2i(100,35.5);
	glVertex2i(106,37);
	glVertex2i(100,20);
	glVertex2i(105,22);
	glVertex2i(100,18);
	glVertex2i(105,20);
	glVertex2i(100,16);
	glVertex2i(105,18);
	glVertex2i(100,14);
	glVertex2f(98,12.5);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.9,0.4,0.0);
	glVertex2f(93,12.5);
	glVertex2f(98,12.5);
	glVertex2i(84,6);
	glVertex2i(81,10);	
	glVertex2i(84,14);	
	glVertex2i(91,12);
	glEnd();
	glBegin(GL_TRIANGLES);
	glColor3f(0.9,0.4,0.0);
	glVertex2i(84,14);
	glVertex2i(91,12);
	glVertex2i(90,15);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.9,0.4,0.0);
	glVertex2i(84,14);
	glVertex2i(90,15);	
	glVertex2i(91,16);
	glVertex2i(89,16);
	glVertex2i(90,17);
	glVertex2i(88,17);
	glVertex2i(89,18);
	glVertex2i(86,18);
	glVertex2i(88,19);
	glVertex2i(81,25);
	glVertex2i(81,29);
	glVertex2f(81,33);
	glVertex2i(80,38);
	glVertex2i(74,39);
	glEnd();	
	glBegin(GL_POLYGON);
	glColor3f(0.9,0.4,0.0);
	glVertex2i(81,25);
	glVertex2i(83,27);
	glVertex2i(81,29);
	glVertex2i(83,31);
	glVertex2f(81,33);
	glVertex2f(83,35);
	glVertex2i(80,38);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.9,0.4,0.0);
	glVertex2i(62,40);
	glVertex2i(67,43);
	glVertex2i(70,46);
	glVertex2f(72.5,44);
	glVertex2i(74,46);
	glVertex2f(74,43);
	glVertex2i(76,44);
	glVertex2f(77,42);
	glVertex2i(80,38);
	glVertex2i(74,39);
	glEnd();
//outline
	glBegin(GL_LINE_LOOP);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(62,40);
	glVertex2i(67,43);
	glVertex2i(70,46);
	glVertex2i(72,52);
	glVertex2f(72.5,44);
	glVertex2i(74,46);
	glVertex2i(74,43);
	glVertex2i(76,44);
	glVertex2i(77,42);
	glVertex2i(85,47);
	glVertex2i(80,38);
	glVertex2f(83,35);
	glVertex2f(81,33);
	glVertex2i(83,31);
	glVertex2i(81,29);
	glVertex2i(83,27);
	glVertex2i(81,25);
	glVertex2i(88,19);
	glVertex2i(86,18);
	glVertex2i(89,18);
	glVertex2i(88,17);
	glVertex2i(90,17);
	glVertex2i(89,16);
	glVertex2i(91,16);
	glVertex2i(90,15);
	glVertex2i(91,12);
	glVertex2f(93,12.5);
	glVertex2i(95,29);
	glVertex2i(100,35.5);
	glVertex2i(106,37);
	glVertex2i(100,20);
	glVertex2i(105,22);
	glVertex2i(100,18);
	glVertex2i(105,20);
	glVertex2i(100,16);
	glVertex2i(105,18);
	glVertex2i(100,14);
	glVertex2f(98,12.5);
	glVertex2i(84,6);
	glVertex2i(81,10);
	glVertex2i(74,15);
	glVertex2i(77,18);
	glVertex2i(71,26);
	glVertex2i(72,29);
	glVertex2i(70,32);
	glVertex2i(76,38);
	glVertex2i(74,39);
	glVertex2i(70,37);
	glVertex2i(64,38);
	glEnd();
	glBegin(GL_LINES);//eyebrow1
	glColor3f(0.1,0.0,0.0);
	glVertex2f(68.5,44.5);
	glVertex2f(71,43.5);
	glEnd();
	glBegin(GL_LINES);//eyebrow2
	glColor3f(0.1,0.0,0.0);
	glVertex2f(72,43);
	glVertex2f(75,41.5);
	glEnd();
	glColor3f(0.0,0.0,0.0);//eye1
	glPointSize(5);
	glBegin(GL_POINTS);
	glVertex2f(68.5,43);
	glEnd();
	glColor3f(0.0,0.0,0.0);//eye2
	glPointSize(5);
	glBegin(GL_POINTS);
	glVertex2f(72,41.5);
	glEnd();
	glColor3f(0.0,0.0,0.0);//NOSE
	glBegin(GL_TRIANGLES);
	glVertex2f(62,40);
	glVertex2f(64,38);
	glVertex2f(60.5,37.8);
	glEnd();
	glColor3f(0.9,0.4,0.0);//leg1
	glBegin(GL_POLYGON);
	glVertex2f(77,6);
	glVertex2i(75,6);
	glVertex2i(75,4.5);
	glVertex2i(75,3);
	glVertex2f(79,4);
	glVertex2f(79,11);
	glVertex2f(77,12.5);
	glEnd();
	glBegin(GL_POLYGON);
	glVertex2f(81,4);
	glVertex2f(83,4);
	glVertex2f(83,7);
	glVertex2f(81,10);
	glEnd();
	glFlush();
}
void song()
{
	glBegin(GL_LINES);//singing symbol 1
	glColor3f(0.0,0.0,0.0);
	glVertex2f(51,94);
	glVertex2f(49,96);
	glEnd();
	glBegin(GL_LINES);
	glVertex2f(52,97);
	glVertex2f(54,95);
	glEnd();
	glBegin(GL_LINES);
	glVertex2f(49,96);
	glVertex2f(52,97);
	glEnd();
	glPointSize(6);
	glBegin(GL_POINTS);
	glVertex2f(51,94);
	glVertex2f(54,95);
	glEnd();
	glBegin(GL_LINES);//singing symbol 2
	glVertex2f(57,96);
	glVertex2f(55,98);
	glEnd();
	glBegin(GL_LINES);
	glVertex2f(60,97);
	glVertex2f(58,99);
	glEnd();
	glBegin(GL_LINES);
	glVertex2f(55,98);
	glVertex2f(58,99);
	glEnd();
	glPointSize(6);
	glBegin(GL_POINTS);
	glVertex2f(57,96);
	glVertex2f(60,97);
	glEnd();	
	glFlush();
}
void crowsings()
{
	float x=0,y=0;
	for(int i=0;i<370;i++)
	{
		glClear(GL_COLOR_BUFFER_BIT);
	sky();
	grass();
	mountain();
	water();
	gate();
	gate1();
	gate2();
	tree();
	grass1();
	tree1();
	tree2();
	crow3();
	fox1();
	song();
			glPushMatrix();
			glTranslatef(x,y,0.0);
			cheese2();
			x=.100;
			y-=.20;
			glPopMatrix();
			glFlush();
	}

}
void foxmove1()
{
	float x=0,y=0;
	for(int i=0;i<170;i++)
	{
		glClear(GL_COLOR_BUFFER_BIT);
	sky();
	grass();
	mountain();
	water();
	gate();
	gate1();
	gate2();
	tree();
	grass1();
	tree1();
	tree2();
	crow3();
			glPushMatrix();
			glTranslatef(x,y,0.0);
			fox1();
			x-=.70;
			y=.10;
			glPopMatrix();
			glFlush();
	}
}

void crow33()
{
	glBegin(GL_TRIANGLES);//mouth
	glColor3f(0.1,0.0,0.0);
	glVertex2i(48,91);
	glVertex2i(45,92);
	glVertex2i(45,90);
	glEnd();
	glBegin(GL_POLYGON);//head
	glColor3f(0.7,0.8,1.0);
	glVertex2i(45,92);
	glVertex2i(44,93);
	glVertex2i(43,93);
	glVertex2i(42,92);
	glVertex2i(42,90);
	glVertex2i(43,89);
	glVertex2i(44,89);
	glVertex2i(45,90);
	glEnd();
	glBegin(GL_POLYGON);//Eye
	glColor3f(0.1,0.0,0.0);
	glVertex2i(43,91);
	glVertex2i(44,91);
	glVertex2i(44,92);
	glVertex2i(43,92);
	glEnd();
	glBegin(GL_POLYGON); //body
	glColor3f(0.1,0.0,0.0);
	glVertex2i(42,92);
	glVertex2i(38,94);
	glVertex2i(39,92);
	glVertex2i(35,92);
	glVertex2i(37,91);
	glVertex2i(27,80);
	glVertex2i(37,89);
	glVertex2i(35,85);
	glVertex2i(39,89);
	glVertex2i(39,86);
	glVertex2i(42,90);
	glEnd();
	glBegin(GL_POLYGON);//leg1
	glColor3f(0.1,0.0,0.0);
	glVertex2i(37,85);
	glVertex2i(38,85);
	glVertex2f(38,88);
	glVertex2i(37,87);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(36,83);
	glVertex2f(39,83);
	glVertex2i(38,85);
	glVertex2i(37,85);
	glEnd();
	glBegin(GL_POLYGON);//leg2
	glColor3f(0.1,0.0,0.0);
	glVertex2i(33,83);
	glVertex2f(34,83);
	glVertex2i(34,86);
	glVertex2i(33,86);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(32,81);
	glVertex2f(35,81);
	glVertex2i(34,83);
	glVertex2i(33,83);
	glEnd();
	glFlush();
}
void crow44()
{
	glBegin(GL_TRIANGLES);//mouth
	glColor3f(0.1,0.0,0.0);
	glVertex2i(48,111);
	glVertex2i(45,112);
	glVertex2i(45,110);
	glEnd();
	glBegin(GL_POLYGON);//head
	glColor3f(0.7,0.8,1.0);
	glVertex2i(45,112);
	glVertex2i(44,113);
	glVertex2i(43,113);
	glVertex2i(42,112);
	glVertex2i(42,110);
	glVertex2i(43,109);
	glVertex2i(44,109);
	glVertex2i(45,110);
	glEnd();
	glBegin(GL_POLYGON);//Eye
	glColor3f(0.1,0.0,0.0);
	glVertex2i(43,111);
	glVertex2i(44,111);
	glVertex2i(44,112);
	glVertex2i(43,112);
	glEnd();
	glBegin(GL_POLYGON); //body
	glColor3f(0.1,0.0,0.0);
	glVertex2i(42,112);
	glVertex2i(38,114);
	glVertex2i(39,112);
	glVertex2i(35,112);
	glVertex2i(37,111);
	glVertex2i(27,100);
	glVertex2i(37,109);
	glVertex2i(35,105);
	glVertex2i(39,109);
	glVertex2i(39,106);
	glVertex2i(42,110);
	glEnd();
	glBegin(GL_POLYGON);//leg1
	glColor3f(0.1,0.0,0.0);
	glVertex2i(37,105);
	glVertex2i(38,105);
	glVertex2f(38,108);
	glVertex2i(37,107);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(36,103);
	glVertex2f(39,103);
	glVertex2i(38,105);
	glVertex2i(37,105);
	glEnd();
	glBegin(GL_POLYGON);//leg2
	glColor3f(0.1,0.0,0.0);
	glVertex2i(33,103);
	glVertex2f(34,103);
	glVertex2i(34,106);
	glVertex2i(33,106);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(32,101);
	glVertex2f(35,101);
	glVertex2i(34,103);
	glVertex2i(33,103);
	glEnd();
	glFlush();
}
void fox44()
{
	glBegin(GL_POLYGON);
	glColor3f(0.7,0.9,1.0);
	glVertex2i(252,110);
	glVertex2i(254,108);
	glVertex2i(260,107);
	glVertex2i(264,109);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.7,0.9,1.0);
	glVertex2i(266,108);
	glVertex2i(260,102);
	glVertex2i(262,99);
	glVertex2i(261,96);
	glVertex2i(267,88);
	glVertex2i(274,84);		
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.7,0.9,1.0);
	glVertex2i(271,80);
	glVertex2i(274,84);	
	glVertex2i(267,88);
	glVertex2i(264,85);
	glEnd();
	glBegin(GL_TRIANGLES);
	glColor3f(0.7,0.9,1.0);
	glVertex2i(260,116);
	glVertex2i(262,122);	
	glVertex2f(262.5,114);
	glEnd();
	glBegin(GL_TRIANGLES);
	glColor3f(0.7,0.9,1.0);
	glVertex2i(267,112);
	glVertex2i(275,117);	
	glVertex2i(270,108);	
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.9,0.4,0.0);
	glVertex2f(283,82.5);
	glVertex2i(285,99);
	glVertex2i(290,105.5);
	glVertex2i(296,107);
	glVertex2i(290,90);
	glVertex2i(295,92);
	glVertex2i(290,88);
	glVertex2i(295,90);
	glVertex2i(290,86);
	glVertex2i(295,88);
	glVertex2i(290,84);
	glVertex2f(288,82.5);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.9,0.4,0.0);
	glVertex2f(283,82.5);
	glVertex2f(288,82.5);
	glVertex2i(274,76);
	glVertex2i(271,80);	
	glVertex2i(274,84);	
	glVertex2i(281,82);
	glEnd();
	glBegin(GL_TRIANGLES);
	glColor3f(0.9,0.4,0.0);
	glVertex2i(274,84);
	glVertex2i(281,82);
	glVertex2i(280,85);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.9,0.4,0.0);
	glVertex2i(274,84);
	glVertex2i(280,85);	
	glVertex2i(281,86);
	glVertex2i(279,86);
	glVertex2i(280,87);
	glVertex2i(278,87);
	glVertex2i(279,88);
	glVertex2i(276,88);
	glVertex2i(278,89);
	glVertex2i(271,95);
	glVertex2i(271,99);
	glVertex2f(271,103);
	glVertex2i(270,108);
	glVertex2i(264,109);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.9,0.4,0.0);
	glVertex2i(271,95);
	glVertex2i(273,97);
	glVertex2i(271,99);
	glVertex2i(273,101);
	glVertex2f(271,103);
	glVertex2f(273,105);
	glVertex2i(270,108);
	glEnd();
	glBegin(GL_POLYGON);
	glColor3f(0.9,0.4,0.0);
	glVertex2i(252,110);
	glVertex2i(257,113);
	glVertex2i(260,116);
	glVertex2f(262.5,114);
	glVertex2i(264,116);
	glVertex2f(264,113);
	glVertex2i(266,114);
	glVertex2f(267,112);
	glVertex2i(270,108);
	glVertex2i(264,109);
	glEnd();
//outline
	glBegin(GL_LINE_LOOP);
	glColor3f(0.1,0.0,0.0);
	glVertex2i(252,110);
	glVertex2i(257,113);
	glVertex2i(260,116);
	glVertex2i(262,122);
	glVertex2f(262.5,114);
	glVertex2i(264,116);
	glVertex2i(264,113);
	glVertex2i(266,114);
	glVertex2i(267,112);
	glVertex2i(275,117);
	glVertex2i(270,108);
	glVertex2f(273,105);
	glVertex2f(271,103);
	glVertex2i(273,101);
	glVertex2i(271,99);
	glVertex2i(273,97);
	glVertex2i(271,95);
	glVertex2i(278,89);
	glVertex2i(276,88);
	glVertex2i(279,88);
	glVertex2i(278,87);
	glVertex2i(280,87);
	glVertex2i(279,86);
	glVertex2i(281,86);
	glVertex2i(280,85);
	glVertex2i(281,82);
	glVertex2f(283,82.5);
	glVertex2i(285,99);
	glVertex2i(290,105.5);
	glVertex2i(296,107);
	glVertex2i(290,90);
	glVertex2i(295,92);
	glVertex2i(290,88);
	glVertex2i(295,90);
	glVertex2i(290,86);
	glVertex2i(295,88);
	glVertex2i(290,84);
	glVertex2f(288,82.5);
	glVertex2i(274,76);
	glVertex2i(271,80);
	glVertex2i(264,85);
	glVertex2i(267,88);
	glVertex2i(261,96);
	glVertex2i(262,99);
	glVertex2i(260,102);
	glVertex2i(266,108);
	glVertex2i(264,109);
	glVertex2i(260,107);
	glVertex2i(254,108);
	glEnd();
	glBegin(GL_LINES);//eyebrow1
	glColor3f(0.1,0.0,0.0);
	glVertex2f(258.5,114.5);
	glVertex2f(261,113.5);
	glEnd();
	glBegin(GL_LINES);//eyebrow2
	glColor3f(0.1,0.0,0.0);
	glVertex2f(262,113);
	glVertex2f(265,111.5);
	glEnd();
	glColor3f(0.0,0.0,0.0);//eye1
	glPointSize(5);
	glBegin(GL_POINTS);
	glVertex2f(258.5,113);
	glEnd();
	glColor3f(0.0,0.0,0.0);//eye2
	glPointSize(5);
	glBegin(GL_POINTS);
	glVertex2f(262,111.5);
	glEnd();
	glColor3f(0.0,0.0,0.0);//NOSE
	glBegin(GL_TRIANGLES);
	glVertex2f(252,110);
	glVertex2f(254,108);
	glVertex2f(250.5,107.8);
	glEnd();
	glColor3f(0.9,0.4,0.0);//leg1
	glBegin(GL_POLYGON);
	glVertex2f(267,76);
	glVertex2i(265,76);
	glVertex2i(265,74.5);
	glVertex2i(265,73);
	glVertex2f(269,74);
	glVertex2f(269,81);
	glVertex2f(267,82.5);
	glEnd();
	glBegin(GL_POLYGON);
	glVertex2f(271,74);
	glVertex2f(273,74);
	glVertex2f(273,77);
	glVertex2f(271,80);
	glEnd();
	glFlush();
}
void moral()
{
	glClear(GL_COLOR_BUFFER_BIT);
	glColor3f(1.0,1.0,0.6);
	glBegin(GL_POLYGON);
	glVertex2i(0,0);
	glVertex2i(300,0);
	glVertex2i(300,200);
	glVertex2i(0,200);
	glEnd();
	glColor3f(1.0,0.0,0.0);
	print_text("~~\"MORAL OF THE STORY\"~~",117,110);
	print_text("\"BEWARE OF FLATTERERS\"",116,100);
	print_text("\"THEY ARE NOT TO BE TRUSTED\"",110,90);
	glFlush();
}
void crowfly2()
{
	float x=0,y=0;
	for(int i=0;i<400;i++)
	{
		glClear(GL_COLOR_BUFFER_BIT);
	sky();
	grass();
	mountain();
	water();
	gate();
	gate1();
	gate2();
	tree();
	grass1();
	tree1();
	tree2();
			glPushMatrix();
			glTranslatef(x,y,0.0);
			crow33();
			x+=.70;
			y+=.10;
			glPopMatrix();
			glFlush();
	}
	moral();
}
void topic()
{
	glClear(GL_COLOR_BUFFER_BIT);
	glColor3f(1.0,1.0,0.6);
	glBegin(GL_POLYGON);
	glVertex2i(0,0);
	glVertex2i(300,0);
	glVertex2i(300,200);
	glVertex2i(0,200);
	glEnd();
	crow44();
	fox44();
	glColor3f(1.0,0.0,0.0);
	print_text("~~\"TOPIC\"~~",130,110);
	print_text("~~\"THE FOX AND THE CROW STORY\"~~",100,100);
	glFlush();
}
void display()
{
	glClear(GL_COLOR_BUFFER_BIT);
	//glColor3f(0.7,0.9,0.9);
	glColor3f(1.7,0.9,0.9);
	glBegin(GL_POLYGON);
	glVertex2i(0,0);
	glVertex2i(300,0);
	glVertex2i(300,200);
	glVertex2i(0,200);
	glEnd();
	glColor3f(1.0,0.0,0.0);
	print_text("~~~\"GOVERNMENT ENGINEERING COLLEGE, HASSAN,573201\"~~~",70,180);
	print_text("~~~\"COMPUTER GRAPHICS AND VISUALIZATION\"~~~",80,170);
	print_text("~~~\"MINI PROJECT\"~~~",110,160);
	print_text("~~~\"UNDER THE GUIDANCE OF\"~~~",30,145);
	print_text("\"Mrs.NIVYASHREE MAM\"",30,130);
	// print_text("(Ass.Prof)~",30,120);
	print_text("FROM:",170,80);
	print_text("~~JEETHENDRA S R (4GH18CS012)~~",170,70);
	print_text("~~NAMRATHA K S (4GH15CS038)~~",170,60);
	glFlush();
}
void mykeys(unsigned char key,int x,int y)
{
	if(key=='1')
		topic();
	else
		if(key=='2')
		nature();
	else
		if(key=='3')
			crowfly();
	else
		if(key=='4')
			crowfly1();
		else
			if(key=='5')
				foxmove();
			else
				if(key=='6')
					crowsings();
				else
					if(key=='7')
						foxmove1();
					else
						if(key=='8')
							crowfly2();
						else
							exit(0);
}
int main(int argc,char **argv)
{
	glutInit(&argc,argv);
	glutInitDisplayMode(GLUT_SINGLE|GLUT_RGB);
	glutInitWindowSize(1000,1000);
	glutInitWindowPosition(0,0);
	glutCreateWindow("THE FOX AND THE CROW");
	init();
	glutKeyboardFunc(mykeys);
	glutDisplayFunc(display);
	glutMainLoop();
	return 0;

}
